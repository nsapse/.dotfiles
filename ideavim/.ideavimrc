""" Map leader to space ---------------------
let mapleader=" "

""" Plugins  --------------------------------
set surround
set multiple-cursors
set relativenumber
set commentary
set sneak
set argtextobj
set easymotion
set which-key
""" -- add nerdtree?
Plug 'preservim/nerdtree'

Plug 'easymotion/vim-easymotion'
set textobj-entire
set ReplaceWithRegister

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"

""" Common settings -------------------------
set showmode
set so=5
set incsearch
set nu

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep

""" Mappings --------------------------------
map <leader>f <Plug>(easymotion-s)
map <leader>e <Plug>(easymotion-f)

map <leader>db <Action>(Debug)
map <leader>c <Action>(Stop)

map <S-Space> <Action>(GotoNextError)

map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>eb <Action>(EditBreakpoint)
map <leader>vb <Action>(ViewBreakpoints)

""" Refactoring and Code Generation
nmap <leader>rf <action>(RefactoringMenu)
nmap <leader>rr <Action>(Refactorings.QuickListPopupAction)
map <leader>rn <Action>(RenameElement)
nmap <leader>ca <action>(Generate)
nmap <C-g> <action>(Generate)

""" LSP Type Actions
nmap <leader>h <Action>(HighlightUsagesInFile)
nmap <leader>su <Action>(ShowUsages)
nmap <leader>fu <Action>(FindUsages)
nmap <leader>th <Action>(TypeHierarchy)
nmap <leader>ch <Action>(CallHierarchy)
nmap <leader>ff <action>(SearchEverywhere)
nmap td <Action>(GotoTypeDeclaration)
nmap gd <Action>(GotoDeclaration)
nmap K <Action>(QuickJavaDoc)
nmap gi <Action>(GotoImplementation)

" nmap gb <Action>(Back)
" nmap gf <Action>(Forward)
nmap gy <Action>(ShowErrorDescription)

" nmap <leader>b <Action>(ToggleLineBreakpoint)
" Highlight usages, use CMD+G/Shift+CMD+G to iterate
map <leader>n <Action>(ReSharperNavigateTo)
map <leader>q <Action>(ToggleRenderedDocPresentation)
map <leader>gg <Action>(Vcs.QuickListPopupAction)
map <leader>x <Action>(HideAllWindows)
" map <leader>ca <Action>(CodeInsightEditorActions)

""" File Browsing and Annotations
map <leader><leader>n :NERDTreeToggle<CR>
map <leader>s <Action>(SelectInProjectView)
map <leader>gb <Action>(Annotate)
map <leader>h <Action>(Vcs.ShowTabbedFileHistory)
map <leader>o <Action>(FileStructurePopup)
map <leader>fc <Action>(FileChooser.NewFile)
map <leader><leader>a <Action>(NewAction)
map <leader>of <Action>(Open)
map <leader>ea <Action>(EditorActions)

""" UI Stuff
map <leader>z <Action>(ToggleDistractionFreeMode)
map <C-c> <Action>(HideActiveWindow)

""" Gradle
map <leader><leader>G <Action>(Gradle.ExecuteTask)

""" Testing
nmap <leader>gm <action>(Git.Menu)
nmap <leader>qc <action>(QuickChangeScheme)

""" navigation
map <leader>j <Action>(PreviousTab)
map [t <Action>(PreviousTab)
map <S-TAB> <Action>(PreviousTab)
map <leader>k <Action>(NextTab)
map ]t <Action>(NextTab)
map <TAB> <Action>(NextTab)

sethandler <c-j> a:vim
sethandler <c-k> a:vim

nnoremap <leader>wc <c-w>c
nnoremap <leader>wh <c-w>h
nnoremap <leader>wj <c-w>j
nnoremap <leader>wk <c-w>k
nnoremap <leader>wl <c-w>l
nnoremap <C-h> :action SplitHorizontally<cr>
nnoremap <C-v> :action SplitVertically<cr>

""" Debugging
" map <leader><leader>d <Action>(ActivateDebugToolWindow)
map <leader><leader>d <Action>(EditorPopupMenuDebug)
map <leader>dj <Action>(StepInto)
map <leader>dk <Action>(StepOut)
map <leader>dl <Action>(StepOver)
